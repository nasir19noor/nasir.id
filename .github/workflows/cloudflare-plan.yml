name: 'Cloudflare Plan'

on:
  push:
    branches: [ '**' ] 
    paths:
      - 'cloudflare/**.tf'  
      - 'cloudflare/**.tfvars'  
      - '.github/workflows/cloudflare-plan.yml'
      - 'config.yaml'

env:
  TF_VERSION: '1.11.4'   
  AWS_REGION: 'ap-southeast-1'
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

jobs:
  terraform-plan:
    name: Cloudflare Plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS CLI
        run: |
          # Install AWS CLI if not already available
          curl https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip \
          && unzip awscliv2.zip \
          && ./aws/install \
          && rm -rf aws awscliv2.zip
    
          # Configure AWS credentials
          mkdir -p ~/.aws
    
          # Create credentials file
          cat > ~/.aws/credentials << EOF
          [default]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
    
          # Create config file with region
          cat > ~/.aws/config << EOF
          [default]
          region=${{ env.AWS_REGION }}
          output=json
          EOF
    
          # Verify credentials are working (optional)
          aws sts get-caller-identity
      - name: Setup Terraform
        
        run: |
          # Install Terraform if not already available
          wget -O- https://apt.releases.hashicorp.com/gpg | \
          gpg --dearmor | \
          sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \
          https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
          sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update
          sudo apt-get install terraform
    
          # Verify Terraform installation
          terraform version

      - name: Terraform Init
        run: |
          cd cloudflare
          terraform init

      - name: Terraform Validate
        run: |
          cd cloudflare
          terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          cd cloudflare
          terraform plan -no-color
        continue-on-error: true
        