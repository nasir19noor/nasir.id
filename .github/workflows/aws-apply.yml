name: 'AWS Apply'

on:
  push:
    branches:
      - main
    paths:
      - 'aws/services/**.tf' 
      - 'aws/services/**.tfvars'  
      - '.github/workflows/aws-apply.yml'

env:
  TF_VERSION: '1.11.4'  
  AWS_REGION: 'ap-southeast-1'  

jobs:
  detect-changed-dirs:
    name: Detect Changed Directories
    runs-on: ubuntu-latest
    outputs:
      dirs: ${{ steps.find-dirs.outputs.dirs }}
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  

      - name: Find Changed Terraform Directories
        id: find-dirs
        run: |
          # Handle different event types
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "Processing Pull Request event"
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.sha }}"
            
            if [ -z "$BASE_SHA" ] || [ "$BASE_SHA" = "0000000000000000000000000000000000000000" ]; then
              echo "Base SHA is empty or zero. Using all terraform files."
              CHANGED_FILES=$(find aws/services -type f -name "*.tf" -o -name "*.tfvars" | sort)
            else
              echo "Comparing $BASE_SHA with $HEAD_SHA"
              CHANGED_FILES=$(git diff --name-only "$BASE_SHA" "$HEAD_SHA" | grep -E '^aws/services/.*\.(tf|tfvars)$' || echo "")
            fi
            
          elif [ "${{ github.event_name }}" == "push" ]; then
            echo "Processing Push event"
            BEFORE_SHA="${{ github.event.before }}"
            AFTER_SHA="${{ github.event.after }}"
            
            if [ -z "$BEFORE_SHA" ] || [ "$BEFORE_SHA" = "0000000000000000000000000000000000000000" ]; then
              echo "Before SHA is empty or zero. Getting all committed files."
              CHANGED_FILES=$(git ls-tree --name-only -r HEAD | grep -E '^aws/services/.*\.(tf|tfvars)$' || echo "")
            else
              echo "Comparing $BEFORE_SHA with $AFTER_SHA"
              CHANGED_FILES=$(git diff --name-only "$BEFORE_SHA" "$AFTER_SHA" | grep -E '^aws/services/.*\.(tf|tfvars)$' || echo "")
            fi
          else
            echo "Processing other event type"
            CHANGED_FILES=$(find aws/services -type f -name "*.tf" -o -name "*.tfvars" | sort)
          fi
          
          # Process the changed files to get directories
          if [ -n "$CHANGED_FILES" ]; then
            echo "Found changed files:"
            echo "$CHANGED_FILES"
            DIRS=$(echo "$CHANGED_FILES" | xargs -I{} dirname {} 2>/dev/null | sort -u | jq -R -s -c 'split("\n") | map(select(length > 0))' || echo "[]")
          else
            echo "No changed terraform files detected"
            DIRS="[]"
          fi
          
          echo "dirs=$DIRS" >> $GITHUB_OUTPUT
          echo "Changed directories: $DIRS"

  terraform-apply:
    name: Terraform Apply
    needs: detect-changed-dirs
    if: ${{ needs.detect-changed-dirs.outputs.dirs != '[]' }}
    runs-on: [self-hosted, contabo]
    strategy:
      matrix:
        directory: ${{ fromJSON(needs.detect-changed-dirs.outputs.dirs) }}
      fail-fast: false
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure backend.conf
        run: |
          pwd
          ls -la
          state_bucket=$(yq e '.aws.global.state_bucket' config.yaml)
          sed -i "s/^bucket = .*/bucket = \"${state_bucket}\"/" backend.conf
          region=$(yq e '.aws.global.region' config.yaml)
          sed -i "s/^region = .*/region = \"${region}\"/" backend.conf 
          sleep 100
          cat backend.conf                

      - name: Terraform Init
        working-directory: ${{ matrix.directory }}
        run: |
          pwd
          cp ../../../backend.conf .
          cat backend.conf
          terraform init -backend-config=backend.conf

      - name: Terraform Validate
        working-directory: ${{ matrix.directory }}
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: ${{ matrix.directory }}
        run: terraform plan 
        continue-on-error: true
        
      - name: Terraform Apply
        id: apply
        working-directory: ${{ matrix.directory }}
        run: terraform apply -auto-approve
        continue-on-error: false       